version: '3'

networks:
  db:
    driver: bridge
  shortener:
    driver: bridge

volumes:
  shortener_db_data:
  kafka_data:
  prometheus_data:
  grafana_data:

services:
  shortener:
    container_name: shortener_service
    build:
      context: ./shortener
    restart: unless-stopped
    environment:
      SERVER_ADDR: "0.0.0.0:${SHORTENER_SERVER_PORT}"
      POSTGRES_URL: "postgres://${SHORTENER_PG_USER}:${SHORTENER_PG_PASSWORD}@shortener_db:5432/${SHORTENER_PG_DB}"
      KAFKA_ADDR: "${KAFKA_ADDR}"
      VALKEY_ADDR: "shortener_cache:6379"
      VALKEY_PASSWORD: "${SHORTENER_CACHE_PASSWORD}"
      TRACING_COLLECTOR_ADDR: "shortener_jaeger:4317"
      MAX_BATCH_WORKERS: "${SHORTENER_MAX_BATCH_WORKERS}"
    networks:
      - db
      - shortener
    depends_on:
      - shortener_db
      - kafka

  shortener_db:
    container_name: shortener_db
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${SHORTENER_PG_USER}"
      POSTGRES_PASSWORD: "${SHORTENER_PG_PASSWORD}"
      POSTGRES_DB: "${SHORTENER_PG_DB}"
    volumes:
      - shortener_db_data:/var/lib/postgresql/data
    networks:
      - db

  shortener_cache:
    container_name: shortener_cache
    image: valkey/valkey
    restart: unless-stopped
    environment:
      VALKEY_PASSWORD: "${SHORTENER_CACHE_PASSWORD}"
    networks:
      - db

  gateway:
    container_name: shortener_gateway
    build:
      context: ./gateway
    restart: unless-stopped
    environment:
      SERVER_ADDR: "0.0.0.0:${GATEWAY_PORT}"
      PUBLIC_HOST: "${PUBLIC_HOST}"
      GRPC_SERVER_ADDR: "shortener_service:${SHORTENER_SERVER_PORT}"
      TRACING_COLLECTOR_ADDR: "shortener_jaeger:4317"
      CORS_ORIGIN: "${CORS_ORIGIN}"
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    networks:
      - shortener
    depends_on:
      - shortener

  bot:
    container_name: shortener_tg-bot
    build:
      context: ./bot
    restart: unless-stopped
    environment:
      PUBLIC_HOST: "${PUBLIC_HOST}"
      GRPC_SERVER_ADDR: "shortener_service:${SHORTENER_SERVER_PORT}"
      BOT_TOKEN: "${TG_BOT_TOKEN}"
      TRACING_COLLECTOR_ADDR: "shortener_jaeger:4317"
    networks:
      - shortener
    depends_on:
      - shortener

  kafka:
    container_name: shortener_kafka
    image: bitnami/kafka:4.0.0
    restart: unless-stopped
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@127.0.0.1:9094
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,EXTERNAL://:9092,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - shortener

  kafka-ui:
    container_name: shortener_kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    ports:
      - "8088:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-shortener-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
    depends_on:
      - kafka
    networks:
      - shortener

  statistics:
    container_name: shortener_statistics
    build:
      context: ./statistics
    restart: unless-stopped
    environment:
      KAFKA_ADDR: kafka:9093
      SERVER_ADDR: "0.0.0.0:${STATISTICS_SERVER_PORT}"
      CLICKHOUSE_ADDR: clickhouse:9000
      CLICKHOUSE_USER: "${STATISTICS_CLICKHOUSE_USER}"
      CLICKHOUSE_PASSWORD: "${STATISTICS_CLICKHOUSE_PASSWORD}"
      CLICKHOUSE_BATCH_SIZE: "${STATISTICS_CLICKHOUSE_BATCH_SIZE}"
      TOP_TTL: "${CACHING_TTL}"
      TOP_AMOUNT: "${CACHING_SIZE}"
      VALKEY_ADDR: "shortener_statistics-valkey:6379"
      VALKEY_PASSWORD: "${STATISTICS_VALKEY_PASSWORD}"
      TRACING_COLLECTOR_ADDR: "shortener_jaeger:4317"
      PRODUCER_SCHEDULER_CRONTAB: "${STATISTICS_PRODUCER_SCHEDULER_CRONTAB}"
      PRODUCER_LOCK_INTERVAL_SECONDS: "${STATISTICS_PRODUCER_LOCK_INTERVAL_SECONDS}"
    depends_on:
      - shortener
      - kafka
      - clickhouse
    networks:
      - shortener

  clickhouse:
    container_name: shortener_statistics-clickhouse
    image: clickhouse/clickhouse-server:latest
    environment:
      CLICKHOUSE_USER: "${STATISTICS_CLICKHOUSE_USER}"
      CLICKHOUSE_PASSWORD: "${STATISTICS_CLICKHOUSE_PASSWORD}"
    ports:
      - "8123:8123"
    restart: unless-stopped
    networks:
      - shortener

  statistics_valkey:
    container_name: shortener_statistics-valkey
    image: valkey/valkey
    restart: unless-stopped
    environment:
      VALKEY_PASSWORD: "${STATISTICS_VALKEY_PASSWORD}"
    networks:
      - shortener

  prometheus:
    container_name: shortener_statistics-prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    command: '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./config/statistics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - shortener

  grafana:
    container_name: shortener_statistics-grafana
    image: grafana/grafana-oss
    volumes:
      - ./config/statistics/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "8089:3000"
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/mitter.json"
      GF_SERVER_ROOT_URL: "${STATISTICS_GF_SERVER_ROOT_URL}"
      GF_SERVER_SERVE_FROM_SUB_PATH: "${STATISTICS_GF_SERVE_FROM_SUB_PATH}"
      GF_SERVER_DOMAIN: "${STATISTICS_GF_DOMAIN}"
      GF_SERVER_PROXY_ENABLE: "${STATISTICS_GF_PROXY_ENABLE}"
    restart: unless-stopped
    networks:
      - shortener

  jaeger:
    image: jaegertracing/jaeger:2.8.0
    container_name: shortener_jaeger
    ports:
      - "16686:16686"
    restart: unless-stopped
    networks:
      - shortener
